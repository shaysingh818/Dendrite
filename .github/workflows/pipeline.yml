name: Dendrite

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  ndarray:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Build
      working-directory: "./ndarray"
      run: cargo build --color always

    - name: Test
      working-directory: "./ndarray"
      run: cargo test --color always

  metrics:
    runs-on: ubuntu-20.04
    needs: [ndarray]
    steps:
    - uses: actions/checkout@v2

    - name: Build
      working-directory: "./metrics"
      run: cargo build --color always

    - name: Test
      working-directory: "./metrics"
      run: cargo test --color always

  autodiff:
    runs-on: ubuntu-20.04
    needs: [ndarray]
    steps:
    - uses: actions/checkout@v2

    - name: Build
      working-directory: "./autodiff"
      run: cargo build --color always

    - name: Test
      working-directory: "./autodiff"
      run: cargo test --color always

  preprocessing:
    runs-on: ubuntu-20.04
    needs: [ndarray]
    steps:
    - uses: actions/checkout@v2

    - name: Build
      working-directory: "./preprocessing"
      run: cargo build --color always

    - name: Test
      working-directory: "./preprocessing"
      run: cargo test --color always

  datasets:
    runs-on: ubuntu-20.04
    needs: [ndarray]
    steps:
    - uses: actions/checkout@v2

    - name: Build
      working-directory: "./datasets"
      run: cargo build --color always

    - name: Test
      working-directory: "./datasets"
      run: cargo test --color always


  trees:
    runs-on: ubuntu-20.04
    needs: [ndarray, metrics, autodiff, preprocessing, datasets]
    steps:
    - uses: actions/checkout@v2

    - name: Build
      working-directory: "./trees"
      run: cargo build --color always

    - name: Test
      working-directory: "./trees"
      run: cargo test --color always

  regression:
    runs-on: ubuntu-20.04
    needs: [ndarray, metrics, autodiff, preprocessing, datasets]
    steps:
    - uses: actions/checkout@v2

    - name: Build
      working-directory: "./regression"
      run: cargo build --color always

    - name: Test
      working-directory: "./regression"
      run: cargo test --color always


